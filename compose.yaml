# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: postgres:17-alpine
    container_name: katecDb
    restart: always
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - .env
    expose:
      - 5432

  backend:
    build:
      context: .
      target: backend
    container_name: katecBackend
    restart: always
    tty: true
    env_file:
      - .env
    expose:
      - 8000
    working_dir: /app/backend
    volumes:
      - ".:/app"
      - "/etc/localtime:/etc/localtime:ro"
    command: |
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      mkdir -p /app/log/gunicorn &&
      gunicorn -c gunicorn.conf.py config.wsgi"
    depends_on:
      - db

  frontend:
    build:
      context: .
      target: frontend
    container_name: katecFrontend
    restart: always
    ports:
      - "80:80"
    volumes:
      - "./backend/static:/app/static"
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./log/nginx:/var/log/nginx"
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - backend
